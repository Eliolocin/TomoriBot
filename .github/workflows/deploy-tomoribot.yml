name: Deploy TomoriBot
on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Create environment file
        run: |
          echo "🔐 Creating environment file from secrets..."
          echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > .env.docker
          echo "CRYPTO_SECRET=${{ secrets.CRYPTO_SECRET }}" >> .env.docker
          echo "POSTGRES_HOST=postgres" >> .env.docker
          echo "POSTGRES_PORT=5432" >> .env.docker
          echo "POSTGRES_USER=tomori" >> .env.docker
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.docker
          echo "POSTGRES_DB=tomodb" >> .env.docker
          echo "" >> .env.docker
          echo "DEFAULT_BOTNAME=Tomori" >> .env.docker
          echo "DEFAULT_BOTNAME_JP=ともり" >> .env.docker
          echo "BASE_TRIGGER_WORDS=tomori,tomo,トモリ,ともり" >> .env.docker
          echo "RUN_ENV=production" >> .env.docker
          echo "" >> .env.docker
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY || '' }}" >> .env.docker
          echo "DEEPL_KEY=${{ secrets.DEEPL_KEY || '' }}" >> .env.docker
          echo "" >> .env.docker
          echo "DEFAULT_GEMINI_MODEL=gemini-2.5-flash-preview-05-20" >> .env.docker
          echo "DEFAULT_GEMINI_SUBAGENT_MODEL=gemini-2.5-flash-preview-05-20" >> .env.docker
          echo "STREAMING_ENABLED=true" >> .env.docker
          echo "PREFIX==" >> .env.docker
          echo "" >> .env.docker
          echo "GENCH_ID=877047848330465294" >> .env.docker
          echo "DEV_ID=684462114022490125" >> .env.docker
          echo "TESTSRV_ID=877047847214792705" >> .env.docker
          echo "TESTCH_ID=1135045786699309056" >> .env.docker
          echo "TOMORI_ID=841644102059556915" >> .env.docker
          echo "TOMORI_DMS=1112155828263338024" >> .env.docker
          echo "STRING_FOR_DEV=development" >> .env.docker
          echo "HAVENSRV_ID=1040174444074782802" >> .env.docker
      
      - name: Debug environment file
        run: |
          echo "📋 Environment file contents:"
          Get-Content .env.docker
          echo "📋 POSTGRES_PASSWORD specifically:"
          Get-Content .env.docker | Select-String "POSTGRES_PASSWORD"
          
      - name: Stop existing containers
        run: |
          echo "🛑 Stopping existing TomoriBot containers..."
          docker-compose down
        continue-on-error: true
        
      - name: Build new image
        run: |
          echo "🏗️ Building new TomoriBot image..."
          docker-compose build --no-cache
          
      - name: Start updated containers
        run: |
          echo "🚀 Starting updated TomoriBot..."
          docker-compose up -d
          
      - name: Verify deployment
        run: |
          echo "✅ Verifying TomoriBot is running..."
          Start-Sleep 90
          $containers = docker ps --filter "name=tomoribot" --format "table {{.Names}}\t{{.Status}}"
          echo $containers
          
          # Check if both containers are running
          if ((docker ps --filter "name=tomoribot-app" --filter "status=running" -q) -and 
              (docker ps --filter "name=tomoribot-db" --filter "status=running" -q)) {
            echo "🎉 TomoriBot deployment successful!"
          } else {
            echo "❌ TomoriBot deployment failed!"
            exit 1
          }
          
      - name: Discord notification
        if: always()
        run: |
          if ($LASTEXITCODE -eq 0) {
            echo "✅ Would send success notification to Discord"
          } else {
            echo "❌ Would send failure notification to Discord"
          }